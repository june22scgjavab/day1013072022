package revise;

public class Question1{
   public static void main(String[] args){
     int roll;
	 String name;
	 System.out.println(roll);
	 System.out.println(name);
	 }
  }
[ Compilation error as local variable needs to be initialised as they dont get the default value ]
-----------------------------------------------------------------------------------------------------------------------------------------
package revise;

public class Student{
  private int roll;
  private String name;
  public void displayStudent(){
  System.out.println(roll);
  System.out.println(name);
  }
 }
 
 package revise;
 
 public class StudentMain{
  public static void main(String args[]){
   Student student=new Student();
   student.displayStudent();
  }
  }
 [ We will 0 for roll and null for name ]
 -------------------------------------------------------------------------------------------------------------------------------------------
 
 package revise1;
 
 public class Student{
 private int roll;            
 private String name;
                      
 public Student(){
 int roll=1;    // local variable within the constructor and now the local variables are initialised
 String name="Akash"; // the instance value variable will get default value as 0 and null
 }
 
 public void displayStudent(){
 System.out.println(roll);
 System.out.println(name);
 }
}

package revise1;

public class StudentMain{
 public static void main(String args[]) {
    Student student=new Student();
	student.displayStudent();
 }
}
[ So here roll and name are declared as local variables in the constructor which are getting initialised
in the constructor so the instance variables roll and name are getting the default value as 0 for roll
and null for name. ]
------------------------------------------------------------------------------------------------------------------------------------------
package revise2b;
 
 public class Student{
 private int roll;
 private String name;
 
 public Student(int roll, String name){
  roll=this.roll;
  name=this.name;
 }
 
 public void displayStudent(){
 System.out.println(roll);
 System.out.println(name);
 }
}

package revise2b;

public class StudentMain{
 public static void main(String args[]) {
    Student student=new Student(1,"Ram");
	student.displayStudent();
 }
}


[ default values  0 and null]

-----------------------------------------------------------------------------------


package revise2;
 
 public class Student{
 private int roll;
 private String name;
 
 public Student(int roll, String name){
 int roll=this.roll;
 String name=this.name;
 }
 
 public void displayStudent(){
 System.out.println(roll);
 System.out.println(name);
 }
}

package revise2;

public class StudentMain{
 public static void main(String args[]) {
    Student student=new Student(1,"Ram");
	student.displayStudent();
 }
}
[ Compilation error , because the parameters are also local variables and within the constructor
 again we declared local variable with the same name. So within a single scope we cannot have
 multiple variables with the same name]
--------------------------------------------------------------------------------------------------------------------------------------------------
package revise3;

public class Employee{
private int empId;
private String name;

public void Employee(){    // This will be treated as a method and not as a constructor
empId=1;
name="Jerry";
}

public void displayEmployee(){
System.out.println(empId);
System.out.println(name);
}

}

package revise3;

public class EmployeeMain{
public static void main(String args[]){
 Employee employee=new Employee();
 employee.displayEmployee();
 //employee.Employee();
}
}

[  empId and name will get the default value of 0 and null ]
-----------------------------------------------------------------------------------
package revise4;

public class Employee{
private int empId;
private String name;

public void Employee(int empId, String name){
this.empId=empId;
this.name=name;
}

public void displayEmployee(){
System.out.println(empId);
System.out.println(name);
}

}

package revise4;

public class EmployeeMain{
public static void main(String args[]){
 Employee employee1=new Employee();
 employee1.displayEmployee();
 Employee employee2=new Employee(1,"Suresh");
 employee2.displayEmployee();
}
}
[Compilation error ]


package revise4b;

public class Employee{
private int empId;
private String name;

public Employee(int empId, String name){
this.empId=empId;
this.name=name;
}

public void displayEmployee(){
System.out.println(empId);
System.out.println(name);
}

}

package revise4b;

public class EmployeeMain{
public static void main(String args[]){
 Employee employee1=new Employee();
 employee1.displayEmployee();
 Employee employee2=new Employee(1,"Suresh");
 employee2.displayEmployee();
}
}

[ Compilation error because we dont have any default constructor . Even it is not being created during the compilation as already we have 
provided the parameterized constructor. So to execute the above code we have to create a default/parameterless constructor]

-------------------------------------------------------------------------------------------------------------------------------------------------
package revise5;

public class Employee{
private int empId;
private String name;

public Employee(){
empId=2;
name="Jenny";
}

public  Employee(int empId, String name){
this.empId=empId;
this.name=name;
}

public void displayEmployee(){
System.out.println(empId);
System.out.println(name);
}

}

package revise5;

public class EmployeeMain{
public static void main(String args[]){
 Employee employee1=new Employee();
 employee1.displayEmployee();
 Employee employee2=new Employee(1,"Suresh");
 employee2.displayEmployee();
}
}
[ The output will be shown as 2 Jenny and 1 Suresh ]
----------------------------------------------------------------------------------------------------------------------------------------------------

package revise6;

public class Parent{
private int i;

public Parent(int i){
this.i=i;
}

public void displayParent(){
System.out.println(this.i);
}

}


package revise6;
public class Child extends Parent {
private int j;

public Child(){
j=20;
}

public void displayChild(){
System.out.println(System.out.println(j);
}
}

package revise6;

public class Main{
 public static void main(String args[]){
 Child child=new Child();
 child.displayChild();
}

}

----------------------------------------------------------------------------------------------------------------------------------------------------

package revise7;

public class Parent{
private int i;

public Parent(int i){
this.i=i;
}

public void displayParent(){
System.out.println(this.i);
}

}


package revise7;
public class Child extends Parent {
private int j;

public Child(){
super(200);
j=20;
}

public void displayChild(){
System.out.println(System.out.println(j);
}
}

package revise7;

public class Main{
 public static void main(String args[]){
 Child child=new Child();
 child.displayChild();
}

}

-------------------------------------------------------------------------------------------------------------------------------

package revise8;

public class Parent{
private int i;

public Parent(){
this.i=30;
}

public Parent(int i){
this.i=i;
}

public void displayParent(){
System.out.println(this.i);
}

}


package revise8;
public class Child extends Parent {
private int j;

public Child(){
j=20;
}

public void displayChild(){
System.out.println(System.out.println(j);
}
}

package revise8;

public class Main{
 public static void main(String args[]){
 Child child=new Child();
 child.displayChild();
 child.displayParent();
}

}
-----------------------------------------------------------------------------------------

package revise9;

public class Parent{
private int i;

public Parent(){
this.i=30;
}

public Parent(int i){
this.i=i;
}

public void displayParent(){
System.out.println(this.i);
}

}


package revise9;
public class Child extends Parent {
private int j;

public Child(int j){
super(j);
}

public void displayChild(){
System.out.println(System.out.println(j));
}
}

package revise9;

public class Main{
 public static void main(String args[]){
 Child child=new Child(100);
 child.displayChild();
 child.displayParent();
}

}

---------------------------------------------------------------------------------

package revise10;

public class Demo {
private int i;

private Demo(){
i=100;
System.out.println("I am the constructor with private access specifier"+i);
}

public static void main(String args[]){
  Demo demo=new Demo();
 }
}
-------------------------------------------------------------------------------------
package revise11;

public class Demo {
private int i;

private Demo(){
i=100;
System.out.println("I am the constructor with private access specifier"+i);
}
}

package revise11;

public class DemoMain{
public static void main(String args[]){
  Demo demo=new Demo();
 }
}
--------------------------------------------------------------------------------------

package revise12;

public class Parent{
 
 public void display(){
 System.out.println("I am the parent display method");
 }

} 

package revise12;

public class Child extends Parent {

private void display() {
 System.out.println("I am the child display method");
}

}

package revise12;

public class Main{
public static void main(String args[]) {
   Child child=new Child();
   child.display();
  }
 }
 
 ----------------------------------------------------------------------------
 
 package revise13;

public class Parent{
 
 public void display(){
 System.out.println("I am the parent display method");
 }

} 

package revise13;

public class Child extends Parent {

private void display(int i) {
 System.out.println("I am the child display method"+i);
}

}

package revise13;

public class Main{
public static void main(String args[]) {
   Child child=new Child();
   child.display();
   child.display(1);
  }
 }
 
 --------------------------------------------------------------------------------------
 
 package revise14;

public class Parent{
 
 public int display(){
 System.out.println("I am the parent display method");
 }

} 

package revise14;

public class Child extends Parent {

public void display() {
 System.out.println("I am the child display method"+i);
}

}

package revise14;

public class Main{
public static void main(String args[]) {
   Child child=new Child();
   child.display();
  
  }
 }
 
 ----------------------------------------------------------------------------------------
 
 
 package revise15;

public class Parent{
 
 public int display(){
 System.out.println("I am the parent display method1");
 }
 
 public void display(){
 System.out.println("I am the parent display method2");
 }

} 

package revise15;

public class Child extends Parent {



}

package revise15;

public class Main{
public static void main(String args[]) {
   Child child=new Child();
   child.display();
  
  }
 }
 ----------------------------------------------------------------------------------------
 
 package revise16;

public class Parent{
 
 
 
 public void display(){
 System.out.println("I am the parent display method2");
 }

} 

package revise16;

public class Child extends Parent {

public int displayChild(){
 System.out.println("I am the parent display method1");
 }

}

package revise16;

public class Main{
public static void main(String args[]) {
  Parent parent=new Child();
   parent.displayChild();
  
  }
 }
 --------------------------------------------------------------------------------
 
 package revise17;

public class Parent{
 
 
 
 public void display(){
 System.out.println("I am the parent display method2");
 }

} 

package revise17;

public class Child extends Parent {

public int displayChild(){
 System.out.println("I am the parent display method1");
 }
 
 

}

package revise17;

public class Main{
public static void main(String args[]) {
  Parent parent=new Child();
   parent.display();
  
  }
 }
 
 --------------------------------------------------------------------------------
 
 
 package revise18;

public class Parent{
 
 
 
 public void display(){
 System.out.println("I am the parent display method");
 }

} 

package revise18;

public class Child extends Parent {

public void display(){
 System.out.println("I am the child display method");
 }
 
 

}

package revise18;

public class Main{
public static void main(String args[]) {
  Parent parent=new Child();
   parent.display();
  
  }
 }
 -------------------------------------------------------------------------------------
 
 package revise19;

public class Parent{
 
 
 
 public void display(){
 System.out.println("I am the parent display method");
 }

} 

package revise19;

public class Child extends Parent {

public void display(){
super.display();
 System.out.println("I am the child display method");
 }
 
 

}

package revise19;

public class Main{
public static void main(String args[]) {
  Parent parent=new Child();
   parent.display();
  
  }
 }
 ----------------------------------------------------------------
 
 --------------------------------------------------------------------------------------
 
 package revise20;

public class Parent{
 
 protected int i=10;
 
 public void display(){
 System.out.println("I am the parent display method");
 }

} 

package revise20;

public class Child extends Parent {

private int i=20;
 public void display(){
 System.out.println(super.i);
 System.out.prinltn(i);
 System.out.println("I am the child display method");
 }
 
 

}

package revise19;

public class Main{
public static void main(String args[]) {
  Parent parent=new Child();
   parent.display();
  
  }
 }
 
 --------------------------------------------------------------------------